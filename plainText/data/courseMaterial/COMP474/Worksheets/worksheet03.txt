




































COMP474/6741 Intelligent Systems (Winter 2024)

Worksheet #3: Knowledge Base Queries & Linked Open Data

Task 1. How is Concordia University in the DBpedia knowledge graph linked to Wikidata? Find theÏ
property and object for:
<http://dbpedia.org/resource/Concordia University>

Task 2. Your first SPARQL query: What can you find in DBpedia withÏ
SELECT ?o

WHERE {

<http://dbpedia.org/resource/Concordia_University> dbp:location ?o

}

You can run this query using DBpedia’s public SPARQL endpoint at https://dbpedia.org/sparql/.

Task 3. Let’s try out DESCRIBE: Can you explain the result fromÏ
DESCRIBE ?s

WHERE { ?s geo:lat "45.496944"^^xsd:float .

?s geo:long "-73.578056"^^xsd:float . }

Note that the prefix abbreviations geo and xsd are pre-defined in the query interface.1

1You can see all the pre-defined prefixes here: https://dbpedia.org/sparql/?help=nsdecl

http://dbpedia.org/resource/Concordia_University
https://dbpedia.org/sparql/
https://dbpedia.org/sparql/?help=nsdecl
owl:sameAs <https://www.wikidata.org/wiki/Q326342>;

Highlight

Highlight

Highlight

Highlight

Highlight

 SPARQL (Query Language for RDF)


Returns: "Montreal, Quebec, Canada"@en

Prefix      URI
geo	        http://www.w3.org/2003/01/geo/wgs84_pos#
xsd         http://www.w3.org/2001/XMLSchema#

Result Returns:

look for resource ?s where latitude = 45... & long = -73... 

PREFIX geo: <...>

PREFIX xsd: <...>

<s> <p> <o>



COMP474/6741 Worksheet: Knowledge Base Queries & Linked Open Data Winter 2024

Task 4. Now find all predicates and objects that have dbr:Concordia University as the subject :Ï
SELECT . . .

WHERE {

. . .

}

Hint: the subject URI is given and you need variables for the predicate and the object. Note that you
can use the pre-defined prefix dbr (for http://dbpedia.org/resource/) in your query.

Task 5. Create a query that prints out the URI and optionally the foaf:homepage of all universitiesÏ
and colleges located in Montreal:

PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?uname ?uhomepage

WHERE {

. . .

}

Hint: Look for a property that gives you “all colleges and universities in Montreal.” Note that Concordia
doesn’t have a foaf:homepage listed in DBpedia, but Dawson College has one.

Task 6. Using a FILTER, find all universities and colleges in Montreal that have more than 10000 studentsÏ
(dbo:numberOfStudents):

PREFIX dbr: <http://dbpedia.org/resource/>

PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?uni ?num

WHERE {

. . .

FILTER

}

Bonus task: sort the output by the number of students (you’ll need an ORDER BY clause).

Task 7. If you ask Eliza, “Is the Yangtze river longer than the Nile River?”, you’ll get a passive-aggressiveÏ
answer like “I’ll ask the questions, if you don’t mind!”. Can you do better by writing a SPARQL ASK query
for the DBpedia knowledge graph?

PREFIX dbr: <http://dbpedia.org/resource/>

PREFIX dbo: <http://dbpedia.org/ontology/>

ASK

{

. . .

}

Hint: the URIs for the two rivers are dbr:Yangtze and dbr:Nile. Find the property for the length, bind
each value to a variable and add a FILTER to check if one is bigger than the other.

?o ?p

dbr:Concordia_University ?o ?p

?o = object
?p = predicate

You can run this query using DBpedia’s public SPARQL endpoint at https://dbpedia.org/sparql/.

  ?uni a dbo:EducationalInstitution ;
       dbp:city dbr:Montreal .
  
  { ?uni rdf:type dbo:University. }
  UNION
  { ?uni rdf:type dbo:College. }
  
  ?uni foaf:name ?uname .
  
  OPTIONAL { ?uni foaf:homepage ?uhomepage }

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

?uni is an instance of the class dbp:EducationalInstitution. 

specifies that the educational institution (?uni) is located in Montreal (dbr:Montreal).

(?numStudents > 10000)

WHERE { 
 ?uni a dbo:EducationalInstitution ;
       dbp:city dbr:Montreal .
  
  { ?uni rdf:type dbo:University. }
  UNION
  { ?uni rdf:type dbo:College. }
  
  ?uni foaf:name ?uname .
  
  OPTIONAL { ?uni foaf:homepage ?uhomepage }
?uni dbo:numberOfStudents ?numStudents .
}

dbr:Yangtze dbo:length ?YangtzeLength .
dbr:Nile dbo:length ?NileLength .

FILTER (?Nilelength > ?YangtzeLength)

Returns: true





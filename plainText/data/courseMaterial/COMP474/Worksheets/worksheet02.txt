




































COMP474/6741 Intelligent Systems (Winter 2024)

Worksheet #2: Vocabularies & Ontologies

Task 1. Quick refresher: Using the N-Triples (N3) serialization format, write an RDF triple describingÏ
Concordia’s location (city), as recorded in the wikidata.org knowledge graph:

Task 2. Define the fact that Student is a class (as opposed to an instance, like Jane). Use
Turtle format with the following prefix definitions and define Student as part of the ex namespace
(ex:Student):

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

@prefix ex: <http://example.org/> .

Add the triple to explicitly define ex:Student as a class within the ex namespace:

and draw the resulting RDF graph:

Task 3. Now add another triple stating that Jane (ex:jane) is of type ex:Student:

and add it to the graph above.

Task 4. It is good practice to give every IRI a human-readable label (where appropriate). Add two
rdfs:label triples (in English and French) for “Student”:

1.

2.

(Similarly, you would define an rdfs:comment to explain what it means to be a student.)

Task 5. For now at least, every Student is a Person (sorry, robots!). Define this fact as a triple (use
the class foaf:Person) and add it to your graph above:

<https://www.wikidata.org/wiki/Q326342> <located> <https://www.wikidata.org/wiki/Q340>

ex:Student rdf:type rdfs:Class .

Highlight

ex: Jane a rdfs:Class

use the letter: a instead of rdf:type in Turtle

rdfs:label     "Student"@en,
                    "Étudiant"@fr ;


rdfs:comment     "The class representing a student."@en,
                           "La classe représentant un étudiant."@fr .

ex:Student rdf:type rdfs:Class ;

@prefix foaf: <http://xmlns.com/foaf/0.1/> .


Subclass: C1 (a class) is a subclass of C2 (a class)
C1 rdfs:subClassOf C2

rdf:type foaf:Person .

rdf:type foaf:Person states that every ex:Student is also of type 



COMP474/6741 Worksheet: Vocabularies & Ontologies Winter 2024

Task 6. Ok, let’s look at these three triples (written in pseudocode for brevity):

<FG-C080> <teaches> <COMP474/6741> .

<professor> <is a> <slide> .

<student> <handed in by> <assignment> .

Are these syntactically legal triples? (Spoiler alert: yes, we could write each of them using perfectly fine
RDF URIs.) So what exactly is wrong here? (Discuss with your worksheet team partner!)

Task 7. We now define a property, studiesAt, so that we can indicate at which university a student is
studying. Write the triple defining studiesAt as a property (again using the ex: namespace):

(Note: properties should also have labels & comments, but we omit this here.)

Task 8. We now have to add domain and range restrictions for our property to avoid problems like the
ones in Task 6 above. For the domain of our studiesAt property, we only permit ex:Student resources
and for the range, we only admit ex:University resources. Write the two triples:

1.

2.

Task 9. A widely used vocabulary for describing people and their (social) networks is Friend-of-a-FriendÏ
(FOAF), which you’ve seen before:

PREFIX foaf: <http://xmlns.com/foaf/0.1/>

1. Assume Joe has a photo of him published under http://facebook.me/joe.png (not a real URL).
How can you add this information to the knowledge graph using FOAF (hint: look up the vocabu-
lary using the prefix URL above):

2. Again using FOAF, model that Jane is 22 years old (use datatype integer for the age):

<professor> <is a> <slide> . predicate or subject unclear. Same problem with <student> <handed in by> <assignment> .


To define that P (a resource) is a property, write:                                  P rdf:type rdf:Property


 ex: studiesAt rdf:type rdf:Property ;
                        rdfs:label "studiesAt" .

ex:studiesAt rdfs:domain ex:Student .
ex:studiesAt rdfs:range ex:University .


@prefix foaf: <http://xmlns.com/foaf/0.1/> .

<ex: joe> foaf:photo <http://facebook.me/joe.png> .


@prefix foaf: <http://xmlns.com/foaf/0.1/> .

<ex: Jane > foaf:age "22"^^xsd:integer .


To define a class C as the domain of a property P, write:
P rdfs:domain C

Range
To define a class C as the range of a property P, write:
P rdfs:range C

























Languages and Finite Automata


COMP 335
*
A Universal Turing Machine
 
*

COMP 335


COMP 335
*
they are “hardwired”
i.e., they execute
only one program
A limitation of Turing Machines 
we discussed so far is that:
Real Computers are re-programmable


COMP 335


COMP 335
*
Solution:
Universal Turing Machine
	 Reprogrammable machine

	 Simulates any other Turing Machine

Attributes:

COMP 335


COMP 335
*
The universal Turing Machine simulates 
  any other Turing Machine
Inputs of  Universal Turing Machine:
1. Description of transitions of
2. Initial contents of the tape 

COMP 335




COMP 335
*

Universal 
Turing 
Machine
Description of 
Tape Contents of 
State of 
Three tapes
Tape 2
Tape 3
Tape 1

COMP 335





COMP 335
*
We describe Turing machine 
as a string of symbols:

We encode        as a string of symbols
Description of 
Tape 1

COMP 335





COMP 335
*
Alphabet Encoding
Symbols:
Encoding:

COMP 335











COMP 335
*
State Encoding
States:
Encoding:
Head Move Encoding
Move:
Encoding:

COMP 335















COMP 335
*
Transition Encoding
Transition:
Encoding:
separator

COMP 335




COMP 335
*
Machine Encoding
Transitions:
Encoding:
separator

COMP 335







COMP 335
*
Tape 1 contents of Universal Turing Machine:

        encoding of the simulated machine
        as a binary string of 0’s and 1’s

COMP 335



COMP 335
*
A Turing Machine is described 
using a binary string of 0’s and 1’s
the set of all Turing machines forms a 
language where each string of the 
language is the binary encoding of 
a Turing Machine
Therefore:

COMP 335


COMP 335
*
Language of Turing Machines
L = { 010100101,

        00100100101111,

        111010011110010101,
       
        …… }
(Turing Machine 1)
(Turing Machine 2)
……

COMP 335


COMP 335
*
Countable Sets
 

COMP 335


COMP 335
*
Infinite sets are either:
 Countable


        or


 Uncountable

COMP 335


COMP 335
*
Defn. of Countable sets:
there is a one to one correspondence
between its elements and the set N of 
natural numbers
A set S is countable if it is finite or 
S is countably infinite if

COMP 335


COMP 335
*
Example:
Even integers:
The set E of even integers
is countable
Positive integers:
Correspondence:
               corresponds to
i.e., for any m in E, f(m)=m/2+1

COMP 335






COMP 335
*
Example:
The set of rational numbers
is countable
Rational numbers:

COMP 335




COMP 335
*
“naïve” approach of counting
Rational numbers:
Positive integers:
Correspondence:
Doesn’t work!
Since we will never “count” the
numbers with nominator 2:

COMP 335





COMP 335
*
A good approach

COMP 335
















COMP 335
*

COMP 335
















COMP 335
*

COMP 335
















COMP 335
*

COMP 335
















COMP 335
*

COMP 335
















COMP 335
*

COMP 335
















COMP 335
*
Rational Numbers:
Correspondence:
Positive Integers:

COMP 335




COMP 335
*
We showed:

 the set of rational numbers Q is countable
 by describing an enumeration procedure,
which is equivalent to having a one-to-one 
correspondence between Q and N

COMP 335


COMP 335
*
Definition
An enumeration procedure for       is a
Turing Machine  that generates all strings
 of      one by one, and
Let        be a set of strings 
each string is generated in finite time

COMP 335





COMP 335
*
Enumeration
Machine for 

Finite time:
strings
output
(on tape)

COMP 335






COMP 335
*
Given a set S, if there is an 
enumeration procedure for S, 
then S is countable
Observation:

COMP 335


COMP 335
*
Example:
The set of all strings
is countable 
We will describe an enumeration procedure
Proof:

COMP 335



COMP 335
*
Naive procedure:
Produce the strings in lexicographic order:
Doesn’t work:
          strings starting with     
          will never be produced 

COMP 335








COMP 335
*
Better procedure:
1. Produce all strings of length 1

2. Produce all strings of length 2

3. Produce all strings of length 3

4. Produce all strings of length 4

..........
Proper Order

COMP 335


COMP 335
*
Produce strings in 
    Proper Order:


length 2
length 3
length 1


COMP 335


COMP 335
*
Theorem:
The set of all Turing Machines
is countable
Proof:
Find an enumeration procedure 
for the set of Turing Machine strings
Any Turing Machine can be encoded
with a binary string of 0’s and 1’s

COMP 335


COMP 335
*
1.  Generate the next binary string 
     of 0’s and 1’s in proper order

2.  Check if the string describes a 
     Turing Machine
           if YES: print string on output tape
           if NO:  ignore string
Enumeration Procedure:
Repeat

COMP 335


COMP 335
*
Uncountable Sets
 

COMP 335


COMP 335
*
A set is uncountable 
if it is not countable
Definition:

COMP 335


COMP 335
*
Theorem:
Let       be an infinite countable set.

The powerset         of       is uncountable 

COMP 335





COMP 335
*
Proof:
Since       is countable, we can write 
Elements of

COMP 335





COMP 335
*
Elements of the powerset have the form:
……

COMP 335




COMP 335
*
We encode each element of the power set
with a binary string of 0’s and 1’s
Powerset
element
Encoding

COMP 335

























COMP 335
*
Let’s assume (for contradiction) 
that the powerset is countable.
Then:      we can enumerate 
               the elements of the powerset

COMP 335


COMP 335
*
Powerset 
elements
Encoding

COMP 335































COMP 335
*
Take the powerset element
whose bits are the complements 
in the diagonal

COMP 335


COMP 335
*




New element:
(birary complement of diagonal)

COMP 335































COMP 335
*
The new element must be some
of the powerset 
However, that’s impossible:
the i-th bit of       must be 
the complement of itself
from definition of
Contradiction!!!

COMP 335



COMP 335
*
Since we have a contradiction:
The powerset         of       is uncountable 

COMP 335




COMP 335
*
An application in Languages
Example Alphabet :
The set of all Strings:
S is infinite and countable

COMP 335




COMP 335
*
Example Alphabet :
The set of all Strings:
infinite and countable
A language is a subset of     :

COMP 335






*
Example Alphabet :
The set of all Strings:
infinite and countable
The powerset of     contains all languages:
uncountable












COMP 335
*
Languages: uncountable
Turing machines: countable
There are more languages
than Turing Machines

COMP 335












COMP 335
*
There are some languages that are not 
accepted by any Turing Machine
(These languages cannot be described
  by algorithms)
Conclusion:

COMP 335


COMP 335
*

Languages 
Accepted by 
Turing Machines
Languages not accepted by Turing Machines

COMP 335


UNKNOWN-0.unknown

UNKNOWN-1.unknown

UNKNOWN-2.unknown

UNKNOWN-3.unknown

UNKNOWN-4.unknown

UNKNOWN-5.unknown

UNKNOWN-6.unknown

UNKNOWN-7.unknown

UNKNOWN-8.unknown

UNKNOWN-9.unknown

UNKNOWN-10.unknown

UNKNOWN-11.unknown

UNKNOWN-12.unknown

UNKNOWN-13.unknown

UNKNOWN-14.unknown

UNKNOWN-15.unknown

UNKNOWN-16.unknown

UNKNOWN-17.unknown

UNKNOWN-18.unknown











M









M









a









b









c









d









K









1









11









111









1111









1
q









2
q









3
q









4
q









L









R









)
,
,
(
)
,
(
2
1
L
b
q
a
q
=
d









1
0
11
0
11
0
1
0
1









1
0
11
0
11
0
1
0
1









)
,
,
(
)
,
(
3
2
R
c
q
b
q
=
d









11
0
111
0
111
10
1
0
11









00









K
,
6
,
4
,
2
,
0









K
,
4
,
3
,
2
,
1









n
2









1
+
n









K
,
8
7
,
4
3
,
2
1









K
,
3
1
,
2
1
,
1
1









K
,
3
,
2
,
1









K
,
3
2
,
2
2
,
1
2









1
1









2
1









3
1









4
1









1
2









2
2









3
2









1
3









2
3









1
4









L









K
,
2
2
,
3
1
,
1
2
,
2
1
,
1
1









K
,
5
,
4
,
3
,
2
,
1









S









S









K
,
,
,
3
2
1
s
s
s









S
s
s
s
Î
K
,
,
,
3
2
1









K
,
,
,
3
2
1
t
t
t









S









+
}
,
,
{
c
b
a









a









aa









aaa









......









b









aaaa









a









b









c









aaa









aab









aac









......









aa









ab









ac









ba









bb









bc









ca









cb









cc









S
2









}
,
,
,
{
3
2
1
K
s
s
s
S
=









}
,
{
3
1
s
s









}
,
,
,
{
10
9
7
5
s
s
s
s









1
s









2
s









3
s









4
s









L









0









}
{
1
s









1









}
,
{
3
2
s
s









}
,
,
{
4
3
1
s
s
s









1
t









2
t









3
t









4
t









K
0011









i
t









}
,
{
b
a









}
,
,
,
,
,
,
,
,
,
{
}
,
{
*
K
aab
aaa
bb
ba
ab
aa
b
a
b
a
S
l
=
=









}
,
,
{
aab
ab
aa
L
=









S









}
},
,
,
}{
,
{
},
{
},
{{
2
K
aab
ab
aa
b
a
a
S
l
=









1
L









2
L









3
L









4
L









1
L









2
L









3
L









k
L









1
M









2
M









3
M









?
